UNa solucion buena

Mejor solucion <5, 4, 6, 12, 2, 10, 1, 11, 7, 9, 8, 3>
Fitness 20.938023450586265
Costo de la solucion: 4776



Mejor solucion <4, 8, 2, 10, 5, 9, 11, 12, 1, 6, 13, 7, 3, 14, 15>
Fitness 18.793459875963165
Costo de la solucion: 5321

esc32
Mejor solucion <15, 9, 18, 19, 3, 5, 4, 25, 13, 14, 22, 11, 1, 2, 6, 29, 16, 23, 24, 21, 7, 8, 10, 27, 26, 20, 12, 17, 32, 30, 28, 31>
Fitness 1351.3513513513515
Costo de la solucion: 74

esc16a
Mejor solucion <10, 8, 1, 9, 2, 3, 4, 15, 5, 12, 7, 6, 13, 11, 14, 16>
Fitness 2941.176470588235
Costo de la solucion: 34


had20 3823
esc16a: 60


    public void run() {
		Population<ArrayList<Boolean>,Integer> poblacionActual;
		poblacionActual = breeder.newRandomPopulation(300);
		while(!condTerminacion.conditionReached(poblacionActual)) {
			System.out.println("Estamos en la generacion " + poblacionActual.getGeneration());
			poblacionActual = iteration(poblacionActual);
		}
		Individual<ArrayList<Boolean>, Integer> solucion = poblacionActual.getBestIndividual();
		System.out.println("Mejor solucion " + solucion.getPhenotype().toString());
		System.out.println("Fitness " + solucion.getFitness());
		int dim = problema.getDimension();
        int costo = 0;
        int obj1;
        int obj2;
        Phenotype<Integer> fenotipo = solucion.getPhenotype();
        /*fenotipo = new Phenotype<>(fenotipo.size());
        fenotipo.setAllele(0,7);
        fenotipo.setAllele(1,5);
        fenotipo.setAllele(2,12);
        fenotipo.setAllele(3,2);
        fenotipo.setAllele(4,1);
        fenotipo.setAllele(5,3);
        fenotipo.setAllele(6,9);
        fenotipo.setAllele(7,11);
        fenotipo.setAllele(8,10);
        fenotipo.setAllele(9,6);
        fenotipo.setAllele(10,8);
        fenotipo.setAllele(11,4);*/
        //System.out.println("Mejor solucion " + fenotipo.toString());
		//System.out.println("Fitness " + solucion.getFitness());
        for (int i = 0; i < (dim - 1); i++) {
        	obj1 = fenotipo.getAllele(i).intValue() - 1;
        	for (int j = i + 1; j < dim; j++) {
        		obj2 =fenotipo.getAllele(j).intValue() - 1; 
        		costo = costo + problema.getDistanciaEntre(i,j) * problema.getFlujoEntre(obj1,obj2);
        		System.out.println("Obj1: " + obj1);
        		System.out.println("Obj2: " + obj2);
        		System.out.println("Flujo: " + problema.getFlujoEntre(obj1,obj2));
        		System.out.println("Lugar: " + i);
        		System.out.println("Lugar " + j);
        		System.out.println("Distancia: " + problema.getDistanciaEntre(i,j));
        		System.out.println("Costo del momento: " + costo);
        	}
        }
        System.out.println("Costo de la solucion: " + costo);

    }

